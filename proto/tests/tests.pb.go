// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/tests/tests.proto

package tests

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import gnmi "github.com/openconfig/gnmi/proto/gnmi"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// OperResult specifies the expected result of an operation. By
// default an operation is expected to succeed.
type GetSetValidationOper_OperResult int32

const (
	GetSetValidationOper_NO_ERROR GetSetValidationOper_OperResult = 0
	GetSetValidationOper_FAILED   GetSetValidationOper_OperResult = 1
)

var GetSetValidationOper_OperResult_name = map[int32]string{
	0: "NO_ERROR",
	1: "FAILED",
}
var GetSetValidationOper_OperResult_value = map[string]int32{
	"NO_ERROR": 0,
	"FAILED":   1,
}

func (x GetSetValidationOper_OperResult) String() string {
	return proto.EnumName(GetSetValidationOper_OperResult_name, int32(x))
}
func (GetSetValidationOper_OperResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tests_0242cb6f512d7766, []int{9, 0}
}

// Default message to use if test doesn't need any arguments. Default message
// will be type of the field in the message. The name of the field discriminates
// one test from another.
type Default struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Default) Reset()         { *m = Default{} }
func (m *Default) String() string { return proto.CompactTextString(m) }
func (*Default) ProtoMessage()    {}
func (*Default) Descriptor() ([]byte, []int) {
	return fileDescriptor_tests_0242cb6f512d7766, []int{0}
}
func (m *Default) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Default.Unmarshal(m, b)
}
func (m *Default) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Default.Marshal(b, m, deterministic)
}
func (dst *Default) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Default.Merge(dst, src)
}
func (m *Default) XXX_Size() int {
	return xxx_messageInfo_Default.Size(m)
}
func (m *Default) XXX_DiscardUnknown() {
	xxx_messageInfo_Default.DiscardUnknown(m)
}

var xxx_messageInfo_Default proto.InternalMessageInfo

// Message that contains all the information specific to a gnmi Subscribe RPC.
type SubscribeTest struct {
	// Request to use by framework during gnmi Subscribe RPC. If test is part of
	// an extension list, a real subscription isn't created, but the query is
	// registered to receive updates corresponding to its path from subscription
	// of parent test.
	Request *gnmi.SubscribeRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	// Types that are valid to be assigned to Args:
	//	*SubscribeTest_FakeTest
	//	*SubscribeTest_PathValidation
	//	*SubscribeTest_HasKeys
	Args                 isSubscribeTest_Args `protobuf_oneof:"args"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SubscribeTest) Reset()         { *m = SubscribeTest{} }
func (m *SubscribeTest) String() string { return proto.CompactTextString(m) }
func (*SubscribeTest) ProtoMessage()    {}
func (*SubscribeTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_tests_0242cb6f512d7766, []int{1}
}
func (m *SubscribeTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeTest.Unmarshal(m, b)
}
func (m *SubscribeTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeTest.Marshal(b, m, deterministic)
}
func (dst *SubscribeTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeTest.Merge(dst, src)
}
func (m *SubscribeTest) XXX_Size() int {
	return xxx_messageInfo_SubscribeTest.Size(m)
}
func (m *SubscribeTest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeTest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeTest proto.InternalMessageInfo

func (m *SubscribeTest) GetRequest() *gnmi.SubscribeRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type isSubscribeTest_Args interface {
	isSubscribeTest_Args()
}

type SubscribeTest_FakeTest struct {
	FakeTest string `protobuf:"bytes,10,opt,name=fake_test,json=fakeTest,proto3,oneof"`
}

type SubscribeTest_PathValidation struct {
	PathValidation *Default `protobuf:"bytes,11,opt,name=path_validation,json=pathValidation,proto3,oneof"`
}

type SubscribeTest_HasKeys struct {
	HasKeys *HasKeys `protobuf:"bytes,12,opt,name=has_keys,json=hasKeys,proto3,oneof"`
}

func (*SubscribeTest_FakeTest) isSubscribeTest_Args() {}

func (*SubscribeTest_PathValidation) isSubscribeTest_Args() {}

func (*SubscribeTest_HasKeys) isSubscribeTest_Args() {}

func (m *SubscribeTest) GetArgs() isSubscribeTest_Args {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *SubscribeTest) GetFakeTest() string {
	if x, ok := m.GetArgs().(*SubscribeTest_FakeTest); ok {
		return x.FakeTest
	}
	return ""
}

func (m *SubscribeTest) GetPathValidation() *Default {
	if x, ok := m.GetArgs().(*SubscribeTest_PathValidation); ok {
		return x.PathValidation
	}
	return nil
}

func (m *SubscribeTest) GetHasKeys() *HasKeys {
	if x, ok := m.GetArgs().(*SubscribeTest_HasKeys); ok {
		return x.HasKeys
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SubscribeTest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SubscribeTest_OneofMarshaler, _SubscribeTest_OneofUnmarshaler, _SubscribeTest_OneofSizer, []interface{}{
		(*SubscribeTest_FakeTest)(nil),
		(*SubscribeTest_PathValidation)(nil),
		(*SubscribeTest_HasKeys)(nil),
	}
}

func _SubscribeTest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SubscribeTest)
	// args
	switch x := m.Args.(type) {
	case *SubscribeTest_FakeTest:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.FakeTest)
	case *SubscribeTest_PathValidation:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PathValidation); err != nil {
			return err
		}
	case *SubscribeTest_HasKeys:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HasKeys); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SubscribeTest.Args has unexpected type %T", x)
	}
	return nil
}

func _SubscribeTest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SubscribeTest)
	switch tag {
	case 10: // args.fake_test
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Args = &SubscribeTest_FakeTest{x}
		return true, err
	case 11: // args.path_validation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Default)
		err := b.DecodeMessage(msg)
		m.Args = &SubscribeTest_PathValidation{msg}
		return true, err
	case 12: // args.has_keys
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HasKeys)
		err := b.DecodeMessage(msg)
		m.Args = &SubscribeTest_HasKeys{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SubscribeTest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SubscribeTest)
	// args
	switch x := m.Args.(type) {
	case *SubscribeTest_FakeTest:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.FakeTest)))
		n += len(x.FakeTest)
	case *SubscribeTest_PathValidation:
		s := proto.Size(x.PathValidation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SubscribeTest_HasKeys:
		s := proto.Size(x.HasKeys)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Test specifies a gNMI test. The type indicates the form of test that is
// being performed.
//
// The authentication for the RPC(s) used in the test is specified in
// username_key and password_key. These values are references to an external
// storage of authentication data that can be retrieved by the framework.
type Test struct {
	// Description of the individual test to use for reporting purposes.
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// Amount of time in seconds test is allowed to run before cancelled.
	Timeout int32 `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// The compiled schema that should be used within the test.
	Schema string `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	// Connection parameters to dial into target. If not specified, the one
	// specified by Suite proto is used.
	Connection *Connection `protobuf:"bytes,4,opt,name=connection,proto3" json:"connection,omitempty"`
	// Can be extended to include other gNMI RPCs.
	//
	// Types that are valid to be assigned to Type:
	//	*Test_Subscribe
	//	*Test_GetSet
	//	*Test_FakeTest
	Type                 isTest_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Test) Reset()         { *m = Test{} }
func (m *Test) String() string { return proto.CompactTextString(m) }
func (*Test) ProtoMessage()    {}
func (*Test) Descriptor() ([]byte, []int) {
	return fileDescriptor_tests_0242cb6f512d7766, []int{2}
}
func (m *Test) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test.Unmarshal(m, b)
}
func (m *Test) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test.Marshal(b, m, deterministic)
}
func (dst *Test) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test.Merge(dst, src)
}
func (m *Test) XXX_Size() int {
	return xxx_messageInfo_Test.Size(m)
}
func (m *Test) XXX_DiscardUnknown() {
	xxx_messageInfo_Test.DiscardUnknown(m)
}

var xxx_messageInfo_Test proto.InternalMessageInfo

func (m *Test) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Test) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *Test) GetSchema() string {
	if m != nil {
		return m.Schema
	}
	return ""
}

func (m *Test) GetConnection() *Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

type isTest_Type interface {
	isTest_Type()
}

type Test_Subscribe struct {
	Subscribe *SubscribeTest `protobuf:"bytes,10,opt,name=subscribe,proto3,oneof"`
}

type Test_GetSet struct {
	GetSet *GetSetTest `protobuf:"bytes,11,opt,name=get_set,json=getSet,proto3,oneof"`
}

type Test_FakeTest struct {
	FakeTest *FakeTest `protobuf:"bytes,12,opt,name=fake_test,json=fakeTest,proto3,oneof"`
}

func (*Test_Subscribe) isTest_Type() {}

func (*Test_GetSet) isTest_Type() {}

func (*Test_FakeTest) isTest_Type() {}

func (m *Test) GetType() isTest_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Test) GetSubscribe() *SubscribeTest {
	if x, ok := m.GetType().(*Test_Subscribe); ok {
		return x.Subscribe
	}
	return nil
}

func (m *Test) GetGetSet() *GetSetTest {
	if x, ok := m.GetType().(*Test_GetSet); ok {
		return x.GetSet
	}
	return nil
}

func (m *Test) GetFakeTest() *FakeTest {
	if x, ok := m.GetType().(*Test_FakeTest); ok {
		return x.FakeTest
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Test) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Test_OneofMarshaler, _Test_OneofUnmarshaler, _Test_OneofSizer, []interface{}{
		(*Test_Subscribe)(nil),
		(*Test_GetSet)(nil),
		(*Test_FakeTest)(nil),
	}
}

func _Test_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Test)
	// type
	switch x := m.Type.(type) {
	case *Test_Subscribe:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Subscribe); err != nil {
			return err
		}
	case *Test_GetSet:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetSet); err != nil {
			return err
		}
	case *Test_FakeTest:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FakeTest); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Test.Type has unexpected type %T", x)
	}
	return nil
}

func _Test_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Test)
	switch tag {
	case 10: // type.subscribe
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SubscribeTest)
		err := b.DecodeMessage(msg)
		m.Type = &Test_Subscribe{msg}
		return true, err
	case 11: // type.get_set
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetSetTest)
		err := b.DecodeMessage(msg)
		m.Type = &Test_GetSet{msg}
		return true, err
	case 12: // type.fake_test
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FakeTest)
		err := b.DecodeMessage(msg)
		m.Type = &Test_FakeTest{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Test_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Test)
	// type
	switch x := m.Type.(type) {
	case *Test_Subscribe:
		s := proto.Size(x.Subscribe)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Test_GetSet:
		s := proto.Size(x.GetSet)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Test_FakeTest:
		s := proto.Size(x.FakeTest)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Credentials to use while connecting to target.
type Credentials struct {
	// Resolver value is used to determine which credentials resolver to pick
	// while resolving username and password to use during gNMI connection. By
	// default, plaintext resolver is used if nothing is specified here. If a
	// special resolver is needed, it needs to be registered into global resolvers
	// table.
	Resolver             string   `protobuf:"bytes,1,opt,name=resolver,proto3" json:"resolver,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Credentials) Reset()         { *m = Credentials{} }
func (m *Credentials) String() string { return proto.CompactTextString(m) }
func (*Credentials) ProtoMessage()    {}
func (*Credentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_tests_0242cb6f512d7766, []int{3}
}
func (m *Credentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Credentials.Unmarshal(m, b)
}
func (m *Credentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Credentials.Marshal(b, m, deterministic)
}
func (dst *Credentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Credentials.Merge(dst, src)
}
func (m *Credentials) XXX_Size() int {
	return xxx_messageInfo_Credentials.Size(m)
}
func (m *Credentials) XXX_DiscardUnknown() {
	xxx_messageInfo_Credentials.DiscardUnknown(m)
}

var xxx_messageInfo_Credentials proto.InternalMessageInfo

func (m *Credentials) GetResolver() string {
	if m != nil {
		return m.Resolver
	}
	return ""
}

func (m *Credentials) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Credentials) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// Connection contains required information to be able to dial into a target.
type Connection struct {
	// The name of the target to be set in gNMI messages. For gNMI implementations
	// that can be address multiple targets, this value can be used to specify
	// which one should be the device under test.
	Target string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	// Address is used while dialing into gNMI server under test. It needs to be
	// in the form "host:port" or it should resolve to a "host:port".
	Address     string       `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Credentials *Credentials `protobuf:"bytes,3,opt,name=credentials,proto3" json:"credentials,omitempty"`
	// Dial timeout in seconds while connecting to gNMI server under test.
	Timeout              int32    `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Connection) Reset()         { *m = Connection{} }
func (m *Connection) String() string { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()    {}
func (*Connection) Descriptor() ([]byte, []int) {
	return fileDescriptor_tests_0242cb6f512d7766, []int{4}
}
func (m *Connection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connection.Unmarshal(m, b)
}
func (m *Connection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connection.Marshal(b, m, deterministic)
}
func (dst *Connection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection.Merge(dst, src)
}
func (m *Connection) XXX_Size() int {
	return xxx_messageInfo_Connection.Size(m)
}
func (m *Connection) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection.DiscardUnknown(m)
}

var xxx_messageInfo_Connection proto.InternalMessageInfo

func (m *Connection) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Connection) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Connection) GetCredentials() *Credentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *Connection) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

// FakeTest is the configuration used for a fake test within the framework.
type FakeTest struct {
	// pass indicates whether the faked test should pass or fail.
	Pass                 bool     `protobuf:"varint,1,opt,name=pass,proto3" json:"pass,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FakeTest) Reset()         { *m = FakeTest{} }
func (m *FakeTest) String() string { return proto.CompactTextString(m) }
func (*FakeTest) ProtoMessage()    {}
func (*FakeTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_tests_0242cb6f512d7766, []int{5}
}
func (m *FakeTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FakeTest.Unmarshal(m, b)
}
func (m *FakeTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FakeTest.Marshal(b, m, deterministic)
}
func (dst *FakeTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FakeTest.Merge(dst, src)
}
func (m *FakeTest) XXX_Size() int {
	return xxx_messageInfo_FakeTest.Size(m)
}
func (m *FakeTest) XXX_DiscardUnknown() {
	xxx_messageInfo_FakeTest.DiscardUnknown(m)
}

var xxx_messageInfo_FakeTest proto.InternalMessageInfo

func (m *FakeTest) GetPass() bool {
	if m != nil {
		return m.Pass
	}
	return false
}

// HasKeys defines the input for a test that checks that a particular list
// in the schema has a specified set of keys in the list. It can be used
// to check for data completeness of a particular list within the schema.
type HasKeys struct {
	// Path to the list that should be checked.
	Path *gnmi.Path `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Items that should be found in the list.
	Item                 []*HasKeys_Item `protobuf:"bytes,2,rep,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *HasKeys) Reset()         { *m = HasKeys{} }
func (m *HasKeys) String() string { return proto.CompactTextString(m) }
func (*HasKeys) ProtoMessage()    {}
func (*HasKeys) Descriptor() ([]byte, []int) {
	return fileDescriptor_tests_0242cb6f512d7766, []int{6}
}
func (m *HasKeys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasKeys.Unmarshal(m, b)
}
func (m *HasKeys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasKeys.Marshal(b, m, deterministic)
}
func (dst *HasKeys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasKeys.Merge(dst, src)
}
func (m *HasKeys) XXX_Size() int {
	return xxx_messageInfo_HasKeys.Size(m)
}
func (m *HasKeys) XXX_DiscardUnknown() {
	xxx_messageInfo_HasKeys.DiscardUnknown(m)
}

var xxx_messageInfo_HasKeys proto.InternalMessageInfo

func (m *HasKeys) GetPath() *gnmi.Path {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *HasKeys) GetItem() []*HasKeys_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

// Item defines an entry in the list.
type HasKeys_Item struct {
	Key                  map[string]string `protobuf:"bytes,1,rep,name=key,proto3" json:"key,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HasKeys_Item) Reset()         { *m = HasKeys_Item{} }
func (m *HasKeys_Item) String() string { return proto.CompactTextString(m) }
func (*HasKeys_Item) ProtoMessage()    {}
func (*HasKeys_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_tests_0242cb6f512d7766, []int{6, 0}
}
func (m *HasKeys_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasKeys_Item.Unmarshal(m, b)
}
func (m *HasKeys_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasKeys_Item.Marshal(b, m, deterministic)
}
func (dst *HasKeys_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasKeys_Item.Merge(dst, src)
}
func (m *HasKeys_Item) XXX_Size() int {
	return xxx_messageInfo_HasKeys_Item.Size(m)
}
func (m *HasKeys_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_HasKeys_Item.DiscardUnknown(m)
}

var xxx_messageInfo_HasKeys_Item proto.InternalMessageInfo

func (m *HasKeys_Item) GetKey() map[string]string {
	if m != nil {
		return m.Key
	}
	return nil
}

// GetSetTest contains all the information specific to a configuration
// test - which is expected to use RPCs to interact with configuration. Set is
// used to change the configuration, and Get or Subscribe can be used to
// retrieve configuration values to verify the target's initial or final states.
type GetSetTest struct {
	// Types that are valid to be assigned to Args:
	//	*GetSetTest_OperValidation
	Args                 isGetSetTest_Args `protobuf_oneof:"args"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetSetTest) Reset()         { *m = GetSetTest{} }
func (m *GetSetTest) String() string { return proto.CompactTextString(m) }
func (*GetSetTest) ProtoMessage()    {}
func (*GetSetTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_tests_0242cb6f512d7766, []int{7}
}
func (m *GetSetTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSetTest.Unmarshal(m, b)
}
func (m *GetSetTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSetTest.Marshal(b, m, deterministic)
}
func (dst *GetSetTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSetTest.Merge(dst, src)
}
func (m *GetSetTest) XXX_Size() int {
	return xxx_messageInfo_GetSetTest.Size(m)
}
func (m *GetSetTest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSetTest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSetTest proto.InternalMessageInfo

type isGetSetTest_Args interface {
	isGetSetTest_Args()
}

type GetSetTest_OperValidation struct {
	OperValidation *GetSetValidationTest `protobuf:"bytes,10,opt,name=oper_validation,json=operValidation,proto3,oneof"`
}

func (*GetSetTest_OperValidation) isGetSetTest_Args() {}

func (m *GetSetTest) GetArgs() isGetSetTest_Args {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *GetSetTest) GetOperValidation() *GetSetValidationTest {
	if x, ok := m.GetArgs().(*GetSetTest_OperValidation); ok {
		return x.OperValidation
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetSetTest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetSetTest_OneofMarshaler, _GetSetTest_OneofUnmarshaler, _GetSetTest_OneofSizer, []interface{}{
		(*GetSetTest_OperValidation)(nil),
	}
}

func _GetSetTest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetSetTest)
	// args
	switch x := m.Args.(type) {
	case *GetSetTest_OperValidation:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OperValidation); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GetSetTest.Args has unexpected type %T", x)
	}
	return nil
}

func _GetSetTest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetSetTest)
	switch tag {
	case 10: // args.oper_validation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetSetValidationTest)
		err := b.DecodeMessage(msg)
		m.Args = &GetSetTest_OperValidation{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GetSetTest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetSetTest)
	// args
	switch x := m.Args.(type) {
	case *GetSetTest_OperValidation:
		s := proto.Size(x.OperValidation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// GetSetValidationTest describes a test that validates configuration sets
// on a target. It does not validate the underlying behaviour of the system,
// but restricts itself to validating that setting and retrieving configuration
// returns the expected result.
//
// The expected test methodology is as follows:
//   1. Set the configuration of the target to a "known good" initial state.
//   2. Validate that the configuration running on the target matches this
//      state.
//   3. Perform an update or replace operation on the configuration.
//   4. Validate that the new state of the target matches that which is
//      expected.
type GetSetValidationTest struct {
	// initialise_oper is the operation to initialise the target. It may consist
	// of a configuration to be set and/or get request that validates the target's
	// current state.
	InitialiseOper *GetSetValidationOper `protobuf:"bytes,1,opt,name=initialise_oper,json=initialiseOper,proto3" json:"initialise_oper,omitempty"`
	// test_oper is the operation that is under test in the validation test.  The
	// Get and/or Set operations may be set within the operation such that the
	// test can validate a set, a set followed by a get, or solely a get
	// operation.
	TestOper             *GetSetValidationOper `protobuf:"bytes,2,opt,name=test_oper,json=testOper,proto3" json:"test_oper,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetSetValidationTest) Reset()         { *m = GetSetValidationTest{} }
func (m *GetSetValidationTest) String() string { return proto.CompactTextString(m) }
func (*GetSetValidationTest) ProtoMessage()    {}
func (*GetSetValidationTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_tests_0242cb6f512d7766, []int{8}
}
func (m *GetSetValidationTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSetValidationTest.Unmarshal(m, b)
}
func (m *GetSetValidationTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSetValidationTest.Marshal(b, m, deterministic)
}
func (dst *GetSetValidationTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSetValidationTest.Merge(dst, src)
}
func (m *GetSetValidationTest) XXX_Size() int {
	return xxx_messageInfo_GetSetValidationTest.Size(m)
}
func (m *GetSetValidationTest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSetValidationTest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSetValidationTest proto.InternalMessageInfo

func (m *GetSetValidationTest) GetInitialiseOper() *GetSetValidationOper {
	if m != nil {
		return m.InitialiseOper
	}
	return nil
}

func (m *GetSetValidationTest) GetTestOper() *GetSetValidationOper {
	if m != nil {
		return m.TestOper
	}
	return nil
}

// GetSetValidationOper describes an individual operation within a
// GetSetValidationTest. If the message consists of:
//
//  * Solely a SetRequest - the SetRequest is sent to the test target, and the
//    result checked against the expected error status in set_ok.
//  * Solely a GetRequest - the GetRequest is sent to the test target, and the
//    result checked against the expected GetResponse.
//  * Both a SetRequest and a GetRequest - the SetRequest is sent to the test
//    target, and the return value compared against set_ok. Subsequently, the
//    GetRequest is sent to the test target, the return code compared to get_ok
//    and the GetResponse compared to the expected GetResponse.
type GetSetValidationOper struct {
	// Types that are valid to be assigned to Setrequest:
	//	*GetSetValidationOper_Set
	//	*GetSetValidationOper_CommonSetrequest
	Setrequest isGetSetValidationOper_Setrequest `protobuf_oneof:"setrequest"`
	// set_ok specifies whether the Set RPC should be successful.
	SetOk GetSetValidationOper_OperResult `protobuf:"varint,10,opt,name=set_ok,json=setOk,proto3,enum=tests.GetSetValidationOper_OperResult" json:"set_ok,omitempty"`
	// Types that are valid to be assigned to Getrequest:
	//	*GetSetValidationOper_Get
	//	*GetSetValidationOper_CommonGetrequest
	Getrequest isGetSetValidationOper_Getrequest `protobuf_oneof:"getrequest"`
	GetOk      GetSetValidationOper_OperResult   `protobuf:"varint,20,opt,name=get_ok,json=getOk,proto3,enum=tests.GetSetValidationOper_OperResult" json:"get_ok,omitempty"`
	// Types that are valid to be assigned to Getresponse:
	//	*GetSetValidationOper_GetResponse
	//	*GetSetValidationOper_CommonGetresponse
	Getresponse          isGetSetValidationOper_Getresponse `protobuf_oneof:"getresponse"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *GetSetValidationOper) Reset()         { *m = GetSetValidationOper{} }
func (m *GetSetValidationOper) String() string { return proto.CompactTextString(m) }
func (*GetSetValidationOper) ProtoMessage()    {}
func (*GetSetValidationOper) Descriptor() ([]byte, []int) {
	return fileDescriptor_tests_0242cb6f512d7766, []int{9}
}
func (m *GetSetValidationOper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSetValidationOper.Unmarshal(m, b)
}
func (m *GetSetValidationOper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSetValidationOper.Marshal(b, m, deterministic)
}
func (dst *GetSetValidationOper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSetValidationOper.Merge(dst, src)
}
func (m *GetSetValidationOper) XXX_Size() int {
	return xxx_messageInfo_GetSetValidationOper.Size(m)
}
func (m *GetSetValidationOper) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSetValidationOper.DiscardUnknown(m)
}

var xxx_messageInfo_GetSetValidationOper proto.InternalMessageInfo

type isGetSetValidationOper_Setrequest interface {
	isGetSetValidationOper_Setrequest()
}

type GetSetValidationOper_Set struct {
	Set *gnmi.SetRequest `protobuf:"bytes,1,opt,name=set,proto3,oneof"`
}

type GetSetValidationOper_CommonSetrequest struct {
	CommonSetrequest string `protobuf:"bytes,2,opt,name=common_setrequest,json=commonSetrequest,proto3,oneof"`
}

func (*GetSetValidationOper_Set) isGetSetValidationOper_Setrequest() {}

func (*GetSetValidationOper_CommonSetrequest) isGetSetValidationOper_Setrequest() {}

func (m *GetSetValidationOper) GetSetrequest() isGetSetValidationOper_Setrequest {
	if m != nil {
		return m.Setrequest
	}
	return nil
}

func (m *GetSetValidationOper) GetSet() *gnmi.SetRequest {
	if x, ok := m.GetSetrequest().(*GetSetValidationOper_Set); ok {
		return x.Set
	}
	return nil
}

func (m *GetSetValidationOper) GetCommonSetrequest() string {
	if x, ok := m.GetSetrequest().(*GetSetValidationOper_CommonSetrequest); ok {
		return x.CommonSetrequest
	}
	return ""
}

func (m *GetSetValidationOper) GetSetOk() GetSetValidationOper_OperResult {
	if m != nil {
		return m.SetOk
	}
	return GetSetValidationOper_NO_ERROR
}

type isGetSetValidationOper_Getrequest interface {
	isGetSetValidationOper_Getrequest()
}

type GetSetValidationOper_Get struct {
	Get *gnmi.GetRequest `protobuf:"bytes,11,opt,name=get,proto3,oneof"`
}

type GetSetValidationOper_CommonGetrequest struct {
	CommonGetrequest string `protobuf:"bytes,12,opt,name=common_getrequest,json=commonGetrequest,proto3,oneof"`
}

func (*GetSetValidationOper_Get) isGetSetValidationOper_Getrequest() {}

func (*GetSetValidationOper_CommonGetrequest) isGetSetValidationOper_Getrequest() {}

func (m *GetSetValidationOper) GetGetrequest() isGetSetValidationOper_Getrequest {
	if m != nil {
		return m.Getrequest
	}
	return nil
}

func (m *GetSetValidationOper) GetGet() *gnmi.GetRequest {
	if x, ok := m.GetGetrequest().(*GetSetValidationOper_Get); ok {
		return x.Get
	}
	return nil
}

func (m *GetSetValidationOper) GetCommonGetrequest() string {
	if x, ok := m.GetGetrequest().(*GetSetValidationOper_CommonGetrequest); ok {
		return x.CommonGetrequest
	}
	return ""
}

func (m *GetSetValidationOper) GetGetOk() GetSetValidationOper_OperResult {
	if m != nil {
		return m.GetOk
	}
	return GetSetValidationOper_NO_ERROR
}

type isGetSetValidationOper_Getresponse interface {
	isGetSetValidationOper_Getresponse()
}

type GetSetValidationOper_GetResponse struct {
	GetResponse *gnmi.GetResponse `protobuf:"bytes,21,opt,name=get_response,json=getResponse,proto3,oneof"`
}

type GetSetValidationOper_CommonGetresponse struct {
	CommonGetresponse string `protobuf:"bytes,22,opt,name=common_getresponse,json=commonGetresponse,proto3,oneof"`
}

func (*GetSetValidationOper_GetResponse) isGetSetValidationOper_Getresponse() {}

func (*GetSetValidationOper_CommonGetresponse) isGetSetValidationOper_Getresponse() {}

func (m *GetSetValidationOper) GetGetresponse() isGetSetValidationOper_Getresponse {
	if m != nil {
		return m.Getresponse
	}
	return nil
}

func (m *GetSetValidationOper) GetGetResponse() *gnmi.GetResponse {
	if x, ok := m.GetGetresponse().(*GetSetValidationOper_GetResponse); ok {
		return x.GetResponse
	}
	return nil
}

func (m *GetSetValidationOper) GetCommonGetresponse() string {
	if x, ok := m.GetGetresponse().(*GetSetValidationOper_CommonGetresponse); ok {
		return x.CommonGetresponse
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetSetValidationOper) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetSetValidationOper_OneofMarshaler, _GetSetValidationOper_OneofUnmarshaler, _GetSetValidationOper_OneofSizer, []interface{}{
		(*GetSetValidationOper_Set)(nil),
		(*GetSetValidationOper_CommonSetrequest)(nil),
		(*GetSetValidationOper_Get)(nil),
		(*GetSetValidationOper_CommonGetrequest)(nil),
		(*GetSetValidationOper_GetResponse)(nil),
		(*GetSetValidationOper_CommonGetresponse)(nil),
	}
}

func _GetSetValidationOper_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetSetValidationOper)
	// setrequest
	switch x := m.Setrequest.(type) {
	case *GetSetValidationOper_Set:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Set); err != nil {
			return err
		}
	case *GetSetValidationOper_CommonSetrequest:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.CommonSetrequest)
	case nil:
	default:
		return fmt.Errorf("GetSetValidationOper.Setrequest has unexpected type %T", x)
	}
	// getrequest
	switch x := m.Getrequest.(type) {
	case *GetSetValidationOper_Get:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Get); err != nil {
			return err
		}
	case *GetSetValidationOper_CommonGetrequest:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.CommonGetrequest)
	case nil:
	default:
		return fmt.Errorf("GetSetValidationOper.Getrequest has unexpected type %T", x)
	}
	// getresponse
	switch x := m.Getresponse.(type) {
	case *GetSetValidationOper_GetResponse:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetResponse); err != nil {
			return err
		}
	case *GetSetValidationOper_CommonGetresponse:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.CommonGetresponse)
	case nil:
	default:
		return fmt.Errorf("GetSetValidationOper.Getresponse has unexpected type %T", x)
	}
	return nil
}

func _GetSetValidationOper_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetSetValidationOper)
	switch tag {
	case 1: // setrequest.set
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(gnmi.SetRequest)
		err := b.DecodeMessage(msg)
		m.Setrequest = &GetSetValidationOper_Set{msg}
		return true, err
	case 2: // setrequest.common_setrequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Setrequest = &GetSetValidationOper_CommonSetrequest{x}
		return true, err
	case 11: // getrequest.get
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(gnmi.GetRequest)
		err := b.DecodeMessage(msg)
		m.Getrequest = &GetSetValidationOper_Get{msg}
		return true, err
	case 12: // getrequest.common_getrequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Getrequest = &GetSetValidationOper_CommonGetrequest{x}
		return true, err
	case 21: // getresponse.get_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(gnmi.GetResponse)
		err := b.DecodeMessage(msg)
		m.Getresponse = &GetSetValidationOper_GetResponse{msg}
		return true, err
	case 22: // getresponse.common_getresponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Getresponse = &GetSetValidationOper_CommonGetresponse{x}
		return true, err
	default:
		return false, nil
	}
}

func _GetSetValidationOper_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetSetValidationOper)
	// setrequest
	switch x := m.Setrequest.(type) {
	case *GetSetValidationOper_Set:
		s := proto.Size(x.Set)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetSetValidationOper_CommonSetrequest:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.CommonSetrequest)))
		n += len(x.CommonSetrequest)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// getrequest
	switch x := m.Getrequest.(type) {
	case *GetSetValidationOper_Get:
		s := proto.Size(x.Get)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetSetValidationOper_CommonGetrequest:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.CommonGetrequest)))
		n += len(x.CommonGetrequest)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// getresponse
	switch x := m.Getresponse.(type) {
	case *GetSetValidationOper_GetResponse:
		s := proto.Size(x.GetResponse)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GetSetValidationOper_CommonGetresponse:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.CommonGetresponse)))
		n += len(x.CommonGetresponse)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Default)(nil), "tests.Default")
	proto.RegisterType((*SubscribeTest)(nil), "tests.SubscribeTest")
	proto.RegisterType((*Test)(nil), "tests.Test")
	proto.RegisterType((*Credentials)(nil), "tests.Credentials")
	proto.RegisterType((*Connection)(nil), "tests.Connection")
	proto.RegisterType((*FakeTest)(nil), "tests.FakeTest")
	proto.RegisterType((*HasKeys)(nil), "tests.HasKeys")
	proto.RegisterType((*HasKeys_Item)(nil), "tests.HasKeys.Item")
	proto.RegisterMapType((map[string]string)(nil), "tests.HasKeys.Item.KeyEntry")
	proto.RegisterType((*GetSetTest)(nil), "tests.GetSetTest")
	proto.RegisterType((*GetSetValidationTest)(nil), "tests.GetSetValidationTest")
	proto.RegisterType((*GetSetValidationOper)(nil), "tests.GetSetValidationOper")
	proto.RegisterEnum("tests.GetSetValidationOper_OperResult", GetSetValidationOper_OperResult_name, GetSetValidationOper_OperResult_value)
}

func init() { proto.RegisterFile("proto/tests/tests.proto", fileDescriptor_tests_0242cb6f512d7766) }

var fileDescriptor_tests_0242cb6f512d7766 = []byte{
	// 857 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xdb, 0x8e, 0xe3, 0x44,
	0x10, 0x8d, 0x9d, 0x4c, 0xe2, 0x94, 0xb3, 0x99, 0x4c, 0x33, 0x0c, 0x56, 0x80, 0x55, 0x64, 0xa1,
	0x25, 0x12, 0xe0, 0x2c, 0x61, 0xb5, 0x5a, 0x90, 0x78, 0x60, 0x76, 0x2e, 0x59, 0x2d, 0x22, 0xa8,
	0x07, 0xf1, 0x84, 0x14, 0x75, 0x9c, 0x1a, 0xc7, 0x4a, 0x7c, 0xc1, 0xdd, 0x1e, 0x94, 0x9f, 0xe0,
	0x91, 0x7f, 0xe0, 0x37, 0xf8, 0x02, 0xbe, 0x87, 0x27, 0xd4, 0xed, 0xf6, 0x25, 0x62, 0x01, 0xed,
	0x4b, 0xd4, 0xa7, 0xab, 0x4e, 0xd7, 0xf1, 0xa9, 0xae, 0x0e, 0xbc, 0x97, 0x66, 0x89, 0x48, 0x66,
	0x02, 0xb9, 0xe0, 0xc5, 0xaf, 0xa7, 0x76, 0xc8, 0x89, 0x02, 0xe3, 0xa7, 0x41, 0x28, 0xb6, 0xf9,
	0xda, 0xf3, 0x93, 0x68, 0x96, 0xa4, 0x18, 0xfb, 0x49, 0x7c, 0x1f, 0x06, 0xb3, 0x20, 0x8e, 0xc2,
	0x59, 0x41, 0x55, 0x4b, 0xf9, 0x53, 0x10, 0xdd, 0x3e, 0xf4, 0xae, 0xf0, 0x9e, 0xe5, 0x7b, 0xe1,
	0xfe, 0x69, 0xc0, 0xa3, 0xbb, 0x7c, 0xcd, 0xfd, 0x2c, 0x5c, 0xe3, 0x0f, 0xc8, 0x05, 0x79, 0x0a,
	0xbd, 0x0c, 0x7f, 0xce, 0x91, 0x0b, 0xc7, 0x98, 0x18, 0x53, 0x7b, 0x7e, 0xe1, 0x29, 0x6a, 0x95,
	0x45, 0x8b, 0x28, 0x2d, 0xd3, 0xc8, 0x87, 0xd0, 0xbf, 0x67, 0x3b, 0x5c, 0x49, 0x39, 0x0e, 0x4c,
	0x8c, 0x69, 0x7f, 0xd1, 0xa2, 0x96, 0xdc, 0x52, 0x07, 0x7e, 0x09, 0xa7, 0x29, 0x13, 0xdb, 0xd5,
	0x03, 0xdb, 0x87, 0x1b, 0x26, 0xc2, 0x24, 0x76, 0x6c, 0x75, 0xf0, 0xd0, 0x2b, 0xbe, 0x46, 0x6b,
	0x59, 0xb4, 0xe8, 0x50, 0x26, 0xfe, 0x58, 0xe5, 0x91, 0x4f, 0xc0, 0xda, 0x32, 0xbe, 0xda, 0xe1,
	0x81, 0x3b, 0x83, 0x23, 0xce, 0x82, 0xf1, 0xd7, 0x78, 0xe0, 0x8b, 0x16, 0xed, 0x6d, 0x8b, 0xe5,
	0x65, 0x17, 0x3a, 0x2c, 0x0b, 0xb8, 0xfb, 0xbb, 0x09, 0x1d, 0x55, 0x78, 0x02, 0xf6, 0x06, 0xa5,
	0xe6, 0x54, 0x15, 0x95, 0x5f, 0xd3, 0xa7, 0xcd, 0x2d, 0xe2, 0x40, 0x4f, 0x84, 0x11, 0x26, 0xb9,
	0x70, 0xcc, 0x89, 0x31, 0x3d, 0xa1, 0x25, 0x24, 0x17, 0xd0, 0xe5, 0xfe, 0x16, 0x23, 0xe6, 0xb4,
	0x15, 0x4d, 0x23, 0xf2, 0x39, 0x80, 0x9f, 0xc4, 0x31, 0xfa, 0xea, 0xc8, 0x8e, 0xd2, 0x74, 0xa6,
	0x35, 0xbd, 0xac, 0x02, 0xb4, 0x91, 0x44, 0x9e, 0x41, 0x9f, 0x97, 0xde, 0x29, 0x7b, 0xec, 0xf9,
	0xb9, 0x66, 0x1c, 0x39, 0xbf, 0x68, 0xd1, 0x3a, 0x91, 0x7c, 0x0a, 0xbd, 0x00, 0xc5, 0x8a, 0xa3,
	0xd0, 0x6e, 0x95, 0x55, 0x6e, 0x51, 0xdc, 0xa1, 0xd0, 0x84, 0x6e, 0xa0, 0x10, 0xf1, 0x9a, 0x2d,
	0x28, 0x9c, 0x3a, 0xd5, 0xf9, 0x37, 0xba, 0x0f, 0xcd, 0x9e, 0x48, 0xaf, 0xc4, 0x21, 0x45, 0x97,
	0x81, 0xfd, 0x32, 0xc3, 0x0d, 0xc6, 0x22, 0x64, 0x7b, 0x4e, 0xc6, 0x60, 0x65, 0xc8, 0x93, 0xfd,
	0x03, 0x66, 0xda, 0xae, 0x0a, 0xcb, 0x58, 0xce, 0x31, 0x8b, 0x59, 0x84, 0xca, 0xac, 0x3e, 0xad,
	0xb0, 0x8c, 0xa5, 0x8c, 0xf3, 0x5f, 0x92, 0x6c, 0xa3, 0xfd, 0xaa, 0xb0, 0xfb, 0xab, 0x01, 0x50,
	0x3b, 0x23, 0x8d, 0x15, 0x2c, 0x0b, 0x50, 0xe8, 0x02, 0x1a, 0xc9, 0x56, 0xb0, 0xcd, 0x26, 0x43,
	0xce, 0xf5, 0xe9, 0x25, 0x24, 0xcf, 0xc0, 0xf6, 0x6b, 0x8d, 0xea, 0x7c, 0x7b, 0x4e, 0x4a, 0xcf,
	0xeb, 0x08, 0x6d, 0xa6, 0x35, 0x5b, 0xdb, 0x39, 0x6a, 0xad, 0xfb, 0x18, 0xac, 0xd2, 0x13, 0x42,
	0xa0, 0x23, 0x85, 0x2a, 0x2d, 0x16, 0x55, 0x6b, 0xf7, 0x0f, 0x03, 0x7a, 0xfa, 0x7a, 0x91, 0xc7,
	0x32, 0x2e, 0xb6, 0x7a, 0x12, 0xa0, 0x98, 0x84, 0xef, 0x99, 0xd8, 0x52, 0xb5, 0x4f, 0x3e, 0x86,
	0x4e, 0x28, 0x30, 0x72, 0xcc, 0x49, 0x7b, 0x6a, 0xcf, 0xdf, 0x39, 0xbe, 0x9c, 0xde, 0x2b, 0x81,
	0x11, 0x55, 0x09, 0xe3, 0x18, 0x3a, 0x12, 0x11, 0x0f, 0xda, 0x3b, 0x3c, 0x38, 0x86, 0xca, 0xff,
	0xe0, 0x0d, 0xf9, 0xde, 0x6b, 0x3c, 0x5c, 0xc7, 0x22, 0x3b, 0x50, 0x99, 0x38, 0x7e, 0x0e, 0x56,
	0xb9, 0x41, 0x46, 0x25, 0x57, 0xda, 0x23, 0x97, 0xe4, 0x1c, 0x4e, 0x1e, 0xd8, 0x3e, 0x2f, 0x1b,
	0x52, 0x80, 0xaf, 0xcc, 0x17, 0x86, 0xfb, 0x13, 0x40, 0x7d, 0x51, 0xc8, 0x0d, 0x9c, 0x26, 0x29,
	0x66, 0xcd, 0x11, 0x2c, 0x2e, 0xe2, 0xfb, 0x47, 0x97, 0xaa, 0x9e, 0x3c, 0x7d, 0x61, 0x86, 0x92,
	0x55, 0xef, 0x56, 0x23, 0xf6, 0x9b, 0x01, 0xe7, 0x6f, 0xa2, 0x90, 0x2b, 0x38, 0x0d, 0xe3, 0x50,
	0x76, 0x20, 0xe4, 0xb8, 0x92, 0x6c, 0x6d, 0xdd, 0xbf, 0x15, 0x5a, 0xa6, 0x98, 0xd1, 0x61, 0xcd,
	0x91, 0x98, 0xbc, 0x80, 0xbe, 0xcc, 0x2e, 0xf8, 0xe6, 0xff, 0xf3, 0x2d, 0x19, 0x93, 0x2b, 0xf7,
	0xaf, 0xf6, 0x3f, 0x85, 0xa9, 0x23, 0x3f, 0x82, 0x36, 0xc7, 0xf2, 0x45, 0x1b, 0xe9, 0x17, 0x0d,
	0x85, 0x7e, 0xcb, 0x16, 0x2d, 0x2a, 0xc3, 0xe4, 0x33, 0x38, 0xf3, 0x93, 0x28, 0x4a, 0x62, 0x39,
	0x77, 0xe5, 0x2b, 0x68, 0xea, 0x17, 0x6d, 0x54, 0x84, 0xee, 0xaa, 0x08, 0xf9, 0x1a, 0xba, 0x1c,
	0xc5, 0x2a, 0xd9, 0x29, 0x37, 0x87, 0xf3, 0x27, 0xff, 0x21, 0xd2, 0x53, 0x4a, 0x91, 0xe7, 0x7b,
	0x41, 0x4f, 0x38, 0x8a, 0xe5, 0x4e, 0x6a, 0x0a, 0xaa, 0xf1, 0xd6, 0x9a, 0x6e, 0x6b, 0x4d, 0x06,
	0x95, 0xe1, 0x86, 0xa6, 0xa0, 0xd6, 0x34, 0x50, 0x9a, 0x8c, 0x52, 0xd3, 0xed, 0x91, 0xa6, 0xa0,
	0xd0, 0x74, 0xfe, 0x76, 0x9a, 0x02, 0xa5, 0xe9, 0x39, 0x0c, 0x24, 0x3d, 0x43, 0x9e, 0x26, 0x31,
	0x47, 0xe7, 0x5d, 0xfd, 0xf6, 0xd4, 0xe2, 0x8a, 0xc0, 0xc2, 0xa4, 0x76, 0x50, 0x43, 0x32, 0x03,
	0xd2, 0x54, 0xa9, 0xd9, 0x17, 0x4a, 0xa6, 0x49, 0xcf, 0x1a, 0x32, 0x8b, 0x90, 0xfb, 0x04, 0xa0,
	0xae, 0x4e, 0x06, 0x60, 0x7d, 0xb7, 0x5c, 0x5d, 0x53, 0xba, 0xa4, 0xa3, 0x16, 0x01, 0xe8, 0xde,
	0x7c, 0xf3, 0xea, 0xdb, 0xeb, 0xab, 0x91, 0x71, 0x39, 0x00, 0xa8, 0x7b, 0x21, 0x51, 0xed, 0xc2,
	0xe5, 0x23, 0xb0, 0x1b, 0xd5, 0xd6, 0x5d, 0xf5, 0xef, 0xf6, 0xc5, 0xdf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x40, 0x41, 0xee, 0x8e, 0x31, 0x07, 0x00, 0x00,
}
