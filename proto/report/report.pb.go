// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/report/report.proto

package report

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import gnmi "github.com/openconfig/gnmi/proto/gnmi"
import tests "github.com/openconfig/gnmitest/proto/tests"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// CompletionStatus indicates the reason why the test ended.
type CompletionStatus int32

const (
	// Test finished with an unknown reason.
	CompletionStatus_UNKNOWN CompletionStatus = 0
	// Test successfully runs to completion.
	CompletionStatus_FINISHED CompletionStatus = 1
	// Test successfully runs to completion, but the completion is triggered by
	// test.
	CompletionStatus_EARLY_FINISHED CompletionStatus = 2
	// RPC request fails during test execution.
	CompletionStatus_RPC_ERROR CompletionStatus = 3
	// Test execution finished because of RPC request timeout.
	CompletionStatus_TIMEOUT CompletionStatus = 4
)

var CompletionStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "FINISHED",
	2: "EARLY_FINISHED",
	3: "RPC_ERROR",
	4: "TIMEOUT",
}
var CompletionStatus_value = map[string]int32{
	"UNKNOWN":        0,
	"FINISHED":       1,
	"EARLY_FINISHED": 2,
	"RPC_ERROR":      3,
	"TIMEOUT":        4,
}

func (x CompletionStatus) String() string {
	return proto.EnumName(CompletionStatus_name, int32(x))
}
func (CompletionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_report_c440a61858d20820, []int{0}
}

// Result of running an individual test.
type Status int32

const (
	// Indicates that test result is not set.
	Status_UNSET Status = 0
	// Indicates that test passes.
	Status_SUCCESS Status = 1
	// Indicates that test fails.
	Status_FAIL Status = 2
)

var Status_name = map[int32]string{
	0: "UNSET",
	1: "SUCCESS",
	2: "FAIL",
}
var Status_value = map[string]int32{
	"UNSET":   0,
	"SUCCESS": 1,
	"FAIL":    2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_report_c440a61858d20820, []int{1}
}

// SubscribeResponseResult proto is used to pair a gnmi SubscribeResponse and
// the error returned from Process function of the test.
type SubscribeResponseResult struct {
	// gnmi SubscribeResponse received by the test.
	Response *gnmi.SubscribeResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	// error returned by Process function of the test.
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeResponseResult) Reset()         { *m = SubscribeResponseResult{} }
func (m *SubscribeResponseResult) String() string { return proto.CompactTextString(m) }
func (*SubscribeResponseResult) ProtoMessage()    {}
func (*SubscribeResponseResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_report_c440a61858d20820, []int{0}
}
func (m *SubscribeResponseResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeResponseResult.Unmarshal(m, b)
}
func (m *SubscribeResponseResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeResponseResult.Marshal(b, m, deterministic)
}
func (dst *SubscribeResponseResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeResponseResult.Merge(dst, src)
}
func (m *SubscribeResponseResult) XXX_Size() int {
	return xxx_messageInfo_SubscribeResponseResult.Size(m)
}
func (m *SubscribeResponseResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeResponseResult.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeResponseResult proto.InternalMessageInfo

func (m *SubscribeResponseResult) GetResponse() *gnmi.SubscribeResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *SubscribeResponseResult) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// SubscribeTestResult is result of running an individual
// suite.SubscribeTest.
type SubscribeTestResult struct {
	// SubscribeResponse messages received as a result of subscription.
	Responses []*SubscribeResponseResult `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	// If test is stateful, error is set as a result of calling Check function of
	// the test. If test is stateless, error set here can be ignored.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// CompletionStatus indicates why the test ended.
	Status               CompletionStatus `protobuf:"varint,3,opt,name=status,proto3,enum=report.CompletionStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SubscribeTestResult) Reset()         { *m = SubscribeTestResult{} }
func (m *SubscribeTestResult) String() string { return proto.CompactTextString(m) }
func (*SubscribeTestResult) ProtoMessage()    {}
func (*SubscribeTestResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_report_c440a61858d20820, []int{1}
}
func (m *SubscribeTestResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeTestResult.Unmarshal(m, b)
}
func (m *SubscribeTestResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeTestResult.Marshal(b, m, deterministic)
}
func (dst *SubscribeTestResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeTestResult.Merge(dst, src)
}
func (m *SubscribeTestResult) XXX_Size() int {
	return xxx_messageInfo_SubscribeTestResult.Size(m)
}
func (m *SubscribeTestResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeTestResult.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeTestResult proto.InternalMessageInfo

func (m *SubscribeTestResult) GetResponses() []*SubscribeResponseResult {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *SubscribeTestResult) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *SubscribeTestResult) GetStatus() CompletionStatus {
	if m != nil {
		return m.Status
	}
	return CompletionStatus_UNKNOWN
}

// Test is used to pair a tests.Test and its result.
type TestResult struct {
	Test *tests.Test `protobuf:"bytes,1,opt,name=test,proto3" json:"test,omitempty"`
	// Result of running the test.
	Result Status `protobuf:"varint,2,opt,name=result,proto3,enum=report.Status" json:"result,omitempty"`
	// Oneof field can be expanded to include results of other gnmi RPCs.
	//
	// Types that are valid to be assigned to Type:
	//	*TestResult_Subscribe
	Type                 isTestResult_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TestResult) Reset()         { *m = TestResult{} }
func (m *TestResult) String() string { return proto.CompactTextString(m) }
func (*TestResult) ProtoMessage()    {}
func (*TestResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_report_c440a61858d20820, []int{2}
}
func (m *TestResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResult.Unmarshal(m, b)
}
func (m *TestResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResult.Marshal(b, m, deterministic)
}
func (dst *TestResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResult.Merge(dst, src)
}
func (m *TestResult) XXX_Size() int {
	return xxx_messageInfo_TestResult.Size(m)
}
func (m *TestResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResult.DiscardUnknown(m)
}

var xxx_messageInfo_TestResult proto.InternalMessageInfo

func (m *TestResult) GetTest() *tests.Test {
	if m != nil {
		return m.Test
	}
	return nil
}

func (m *TestResult) GetResult() Status {
	if m != nil {
		return m.Result
	}
	return Status_UNSET
}

type isTestResult_Type interface {
	isTestResult_Type()
}

type TestResult_Subscribe struct {
	Subscribe *SubscribeTestResult `protobuf:"bytes,10,opt,name=subscribe,proto3,oneof"`
}

func (*TestResult_Subscribe) isTestResult_Type() {}

func (m *TestResult) GetType() isTestResult_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *TestResult) GetSubscribe() *SubscribeTestResult {
	if x, ok := m.GetType().(*TestResult_Subscribe); ok {
		return x.Subscribe
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TestResult) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TestResult_OneofMarshaler, _TestResult_OneofUnmarshaler, _TestResult_OneofSizer, []interface{}{
		(*TestResult_Subscribe)(nil),
	}
}

func _TestResult_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TestResult)
	// type
	switch x := m.Type.(type) {
	case *TestResult_Subscribe:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Subscribe); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TestResult.Type has unexpected type %T", x)
	}
	return nil
}

func _TestResult_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TestResult)
	switch tag {
	case 10: // type.subscribe
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SubscribeTestResult)
		err := b.DecodeMessage(msg)
		m.Type = &TestResult_Subscribe{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TestResult_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TestResult)
	// type
	switch x := m.Type.(type) {
	case *TestResult_Subscribe:
		s := proto.Size(x.Subscribe)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Instance stores test results of main test and its extensions.
type Instance struct {
	Description          string        `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Test                 *TestResult   `protobuf:"bytes,2,opt,name=test,proto3" json:"test,omitempty"`
	Extensions           []*TestResult `protobuf:"bytes,3,rep,name=extensions,proto3" json:"extensions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Instance) Reset()         { *m = Instance{} }
func (m *Instance) String() string { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()    {}
func (*Instance) Descriptor() ([]byte, []int) {
	return fileDescriptor_report_c440a61858d20820, []int{3}
}
func (m *Instance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instance.Unmarshal(m, b)
}
func (m *Instance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instance.Marshal(b, m, deterministic)
}
func (dst *Instance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instance.Merge(dst, src)
}
func (m *Instance) XXX_Size() int {
	return xxx_messageInfo_Instance.Size(m)
}
func (m *Instance) XXX_DiscardUnknown() {
	xxx_messageInfo_Instance.DiscardUnknown(m)
}

var xxx_messageInfo_Instance proto.InternalMessageInfo

func (m *Instance) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Instance) GetTest() *TestResult {
	if m != nil {
		return m.Test
	}
	return nil
}

func (m *Instance) GetExtensions() []*TestResult {
	if m != nil {
		return m.Extensions
	}
	return nil
}

// InstanceGroup stores a set of Instances.
type InstanceGroup struct {
	Description string      `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Instance    []*Instance `protobuf:"bytes,2,rep,name=instance,proto3" json:"instance,omitempty"`
	// Skipped indicates whether the instance group was skipped during
	// test execution based on a prior group being fatal.
	Skipped              bool     `protobuf:"varint,3,opt,name=skipped,proto3" json:"skipped,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstanceGroup) Reset()         { *m = InstanceGroup{} }
func (m *InstanceGroup) String() string { return proto.CompactTextString(m) }
func (*InstanceGroup) ProtoMessage()    {}
func (*InstanceGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_report_c440a61858d20820, []int{4}
}
func (m *InstanceGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceGroup.Unmarshal(m, b)
}
func (m *InstanceGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceGroup.Marshal(b, m, deterministic)
}
func (dst *InstanceGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceGroup.Merge(dst, src)
}
func (m *InstanceGroup) XXX_Size() int {
	return xxx_messageInfo_InstanceGroup.Size(m)
}
func (m *InstanceGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceGroup.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceGroup proto.InternalMessageInfo

func (m *InstanceGroup) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InstanceGroup) GetInstance() []*Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *InstanceGroup) GetSkipped() bool {
	if m != nil {
		return m.Skipped
	}
	return false
}

// Report is result of running suite.Suite
type Report struct {
	Results              []*InstanceGroup `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Report) Reset()         { *m = Report{} }
func (m *Report) String() string { return proto.CompactTextString(m) }
func (*Report) ProtoMessage()    {}
func (*Report) Descriptor() ([]byte, []int) {
	return fileDescriptor_report_c440a61858d20820, []int{5}
}
func (m *Report) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Report.Unmarshal(m, b)
}
func (m *Report) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Report.Marshal(b, m, deterministic)
}
func (dst *Report) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Report.Merge(dst, src)
}
func (m *Report) XXX_Size() int {
	return xxx_messageInfo_Report.Size(m)
}
func (m *Report) XXX_DiscardUnknown() {
	xxx_messageInfo_Report.DiscardUnknown(m)
}

var xxx_messageInfo_Report proto.InternalMessageInfo

func (m *Report) GetResults() []*InstanceGroup {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterType((*SubscribeResponseResult)(nil), "report.SubscribeResponseResult")
	proto.RegisterType((*SubscribeTestResult)(nil), "report.SubscribeTestResult")
	proto.RegisterType((*TestResult)(nil), "report.TestResult")
	proto.RegisterType((*Instance)(nil), "report.Instance")
	proto.RegisterType((*InstanceGroup)(nil), "report.InstanceGroup")
	proto.RegisterType((*Report)(nil), "report.Report")
	proto.RegisterEnum("report.CompletionStatus", CompletionStatus_name, CompletionStatus_value)
	proto.RegisterEnum("report.Status", Status_name, Status_value)
}

func init() { proto.RegisterFile("proto/report/report.proto", fileDescriptor_report_c440a61858d20820) }

var fileDescriptor_report_c440a61858d20820 = []byte{
	// 524 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x9d, 0xdb, 0x2e, 0x4d, 0x6e, 0x59, 0x15, 0x19, 0xd0, 0xc2, 0x78, 0x58, 0x95, 0x87, 0xa9,
	0xaa, 0x50, 0x3b, 0x75, 0x12, 0x12, 0x42, 0x3c, 0x8c, 0x92, 0xb1, 0x8a, 0x91, 0x22, 0xa7, 0x15,
	0xe2, 0x01, 0x4d, 0x6b, 0x6b, 0x4a, 0xc4, 0x1a, 0x5b, 0xb6, 0x23, 0xb1, 0x7f, 0xc0, 0x6f, 0x40,
	0xfc, 0x58, 0x14, 0xc7, 0x4e, 0xab, 0x8d, 0x4a, 0xbc, 0xf8, 0xe3, 0xde, 0x73, 0xee, 0x39, 0xf7,
	0x3a, 0x81, 0x67, 0x5c, 0x30, 0xc5, 0x06, 0x82, 0x72, 0x26, 0x94, 0xd9, 0xfa, 0x3a, 0x86, 0x9d,
	0xf2, 0x76, 0x74, 0xba, 0x4a, 0xd5, 0xf7, 0x7c, 0xde, 0x5f, 0xb0, 0xf5, 0x80, 0x71, 0x9a, 0x2d,
	0x58, 0xf6, 0x2d, 0x5d, 0x0d, 0x56, 0xd9, 0x3a, 0x1d, 0x94, 0x6c, 0x7d, 0x2c, 0x96, 0x92, 0x79,
	0xf4, 0x72, 0x37, 0x43, 0x51, 0xa9, 0x0c, 0xab, 0x38, 0xca, 0x72, 0x2d, 0x79, 0xe1, 0x12, 0x0e,
	0x93, 0x7c, 0x2e, 0x17, 0x22, 0x9d, 0x53, 0x42, 0x25, 0x67, 0x99, 0x2c, 0xf6, 0xfc, 0x56, 0xe1,
	0x33, 0x70, 0x85, 0x89, 0x04, 0xa8, 0x83, 0xba, 0xad, 0xe1, 0x61, 0x5f, 0x2b, 0x3e, 0x24, 0x54,
	0x40, 0xfc, 0x04, 0xf6, 0xa9, 0x10, 0x4c, 0x04, 0xb5, 0x0e, 0xea, 0x7a, 0xa4, 0xbc, 0x84, 0x7f,
	0x10, 0x3c, 0xae, 0x58, 0x53, 0x2a, 0x95, 0x91, 0x78, 0x03, 0x9e, 0x65, 0xca, 0x00, 0x75, 0xea,
	0xdd, 0xd6, 0xf0, 0xb8, 0x6f, 0x26, 0xb2, 0xc3, 0x16, 0xd9, 0x30, 0xfe, 0x2d, 0x86, 0x4f, 0xc1,
	0x91, 0xea, 0x46, 0xe5, 0x32, 0xa8, 0x77, 0x50, 0xb7, 0x3d, 0x0c, 0x6c, 0xc5, 0x11, 0x5b, 0xf3,
	0x5b, 0xaa, 0x52, 0x96, 0x25, 0x3a, 0x4f, 0x0c, 0x2e, 0xfc, 0x8d, 0x00, 0xb6, 0x5c, 0x1d, 0x43,
	0xa3, 0x18, 0x91, 0x69, 0xba, 0xd5, 0x2f, 0xe7, 0xa5, 0x01, 0x3a, 0x81, 0x4f, 0xc0, 0x11, 0x1a,
	0xaa, 0x85, 0xdb, 0xc3, 0x76, 0xe5, 0xd9, 0xd4, 0x2d, 0xb3, 0xf8, 0x35, 0x78, 0xd2, 0x76, 0x11,
	0x80, 0xae, 0xf6, 0xfc, 0x41, 0x7b, 0x1b, 0xe1, 0xcb, 0x3d, 0xb2, 0xc1, 0xbf, 0x75, 0xa0, 0xa1,
	0xee, 0x38, 0x0d, 0x7f, 0x21, 0x70, 0xc7, 0x99, 0x54, 0x37, 0xd9, 0x82, 0xe2, 0x0e, 0xb4, 0x96,
	0xb4, 0x00, 0xf0, 0xa2, 0x0d, 0xed, 0xd0, 0x23, 0xdb, 0x21, 0x7c, 0x62, 0xcc, 0xd7, 0xb4, 0x1c,
	0xb6, 0x72, 0x1b, 0x15, 0xd3, 0xc3, 0x10, 0x80, 0xfe, 0x54, 0x34, 0x93, 0x29, 0xcb, 0x8a, 0x49,
	0xd5, 0x77, 0xa0, 0xb7, 0x50, 0xe1, 0x1d, 0x1c, 0x58, 0x27, 0xef, 0x05, 0xcb, 0xf9, 0x7f, 0xd8,
	0x79, 0x01, 0x6e, 0x6a, 0x28, 0x41, 0x4d, 0x8b, 0xf8, 0x56, 0xc4, 0x96, 0x22, 0x15, 0x02, 0x07,
	0xd0, 0x94, 0x3f, 0x52, 0xce, 0xe9, 0x52, 0xbf, 0x9d, 0x4b, 0xec, 0x35, 0x7c, 0x05, 0x0e, 0xd1,
	0x34, 0x3c, 0x80, 0x66, 0x39, 0x5e, 0xfb, 0xc5, 0x3c, 0xbd, 0x5f, 0x50, 0x7b, 0x23, 0x16, 0xd5,
	0xfb, 0x0a, 0xfe, 0xfd, 0x97, 0xc7, 0x2d, 0x68, 0xce, 0xe2, 0x0f, 0xf1, 0xe4, 0x73, 0xec, 0xef,
	0xe1, 0x47, 0xe0, 0x5e, 0x8c, 0xe3, 0x71, 0x72, 0x19, 0xbd, 0xf3, 0x11, 0xc6, 0xd0, 0x8e, 0xce,
	0xc9, 0xd5, 0x97, 0xeb, 0x2a, 0x56, 0xc3, 0x07, 0xe0, 0x91, 0x4f, 0xa3, 0xeb, 0x88, 0x90, 0x09,
	0xf1, 0xeb, 0x05, 0x7b, 0x3a, 0xfe, 0x18, 0x4d, 0x66, 0x53, 0xbf, 0xd1, 0xeb, 0x81, 0x63, 0x8a,
	0x7a, 0xb0, 0x3f, 0x8b, 0x93, 0x68, 0xea, 0xef, 0x15, 0x88, 0x64, 0x36, 0x1a, 0x45, 0x49, 0xe2,
	0x23, 0xec, 0x42, 0xe3, 0xe2, 0x7c, 0x7c, 0xe5, 0xd7, 0xe6, 0x8e, 0xfe, 0xe9, 0xce, 0xfe, 0x06,
	0x00, 0x00, 0xff, 0xff, 0xa3, 0xf0, 0x75, 0x07, 0x03, 0x04, 0x00, 0x00,
}
